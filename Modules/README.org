* Computing Magic -- A Modular Curriculum
  
A [[https://github.com/GregDavidson/computing-magic][Computing Magic Project]] Curriculum.

Think of this as a Montessori-style classroom for learning. The material is
broken up into Modules which contain projects along with opportunities to create
your own projects. After the first module you can do the others in any order
that makes sense to you. There are many links to additional enriching content.

Modules marked with FUTURE contain the plans for that module's eventual form.
They are currently heavy on information and light on activities. If you choose
to explore them you'll need to fill in your own ways to practice and/or ask for
suggestions. You would thereby be helping in that module's development.

When a module changes status, e.g. from FUTURE to NEW to unmarked you should
expect major improvements. *If you read one of the earlier versions, check back
to see those improvements!* These modules were in conjunction with Group
Sessions. At some point I intend to create some short videos to replicate some
of the enrichment pieces that were a part of those meetings.

*** Module and Session Notes

- [[file:Module-1/module-1.org][Module 1: Functional Programming]]
We begin an Open Lab with a Tutorial for *learning Lisp / Scheme / Racket by
writing functions which compute pictures*.  You should do this module before any
others, regardless of your current level of computing skills.

- [[file:Module-1a/module-1a.org][Module 1a: 2D and 3D Functional Art]]
After a brief presentation, this will be an Open Lab for *Making Functional
Visual Art* with the =pict= and =pict3d= packages

- [[file:Module-1b/module-1b.org][Module 1b: Imperative 2D Art]]
After a brief presentation, this will be an Open Lab for *Creating Visual Art
using Imperative Turtle Graphics!*

- [[file:Module-1c/module-1c.org][New Module 1c: Animation and Game Design]]
Exploring techniques for *Animation & Interactive Graphics & Game Design!*

- [[file:Module-2/module-2.org][Module 2: Software Development Power Tools]]
Exploring more powerful software development tools. *Installing and setting up a
more powerful development environment!* The material here has a longer learning
curve than much of the rest before it pays off.  *It will pay off in a big
way if you start doing larger and more complex projects!*

- [[file:Module-3/module-3.org][Module 3: Using the Power Tools with Your Projects]]
Incorporating the New Tools for your Art or other projects. This is a
continuation of Module 2.

- [[file:Module-4/module-4.org][NEW Module 4: Web, Systems and Network Programming]]
Learning *Systems and Network Programming* by writing a Web Server using the
Software Tools learned so far. /Uncovering the secrets behind being able to
write advanced computer programs!/

- [[file:Module-5/module-5.org][NEW Module 5, SQL and Relational Design]]
Learning the power of *SQL* and the /Relational Model/ for Programming and
Persistence! This will greatly simplify any of your programs which need to work
with large amounts of data!

- [[file:Module-6/module-6.org][FUTURE Module 6, Putting it All Together]]
Creating an ambitious Project to use Web, Graphics, Lisp and SQL. An opening for
*Creativity and Software Design*. This is very much a /build your own adventure/
module. Consider doing this module with a group or with partners.

- [[file:Module-7/module-7.org][FUTURE Module 7, Knowledge-Based AI Technology]]
*Getting your computer to understand your domain* AI has always been one of the most
magical areas of computing. AI has grown into a large field with a lot of diverse and
powerful technologies. This module aims to give you experience with some of the
most central and powerful AI technologies and leans towards Hybrid AI, i.e. combining
explicit knowledge and strategies with Heuristics.
