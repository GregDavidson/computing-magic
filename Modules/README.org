* Computing Magic -- A Modular Curriculum
  
A [[https://github.com/GregDavidson/computing-magic#readme][Computing Magic Project]] Curriculum.

Think of this as a Montessori-style classroom for learning. The material is
broken up into Modules which contain activities along with opportunities to
create your own projects. After the first module you can do the others in any
order that makes sense to you. There are many links to additional enriching
content.

Modules marked with NEW have had less testing by learners - they are the /less
trodden path!/ if you choose to explore them be prepared to get stuck and please
readily ask for assistance - you will thereby be helping in that module's
development!

All of these modules are undergoing revision and (hopefully) improvements -
especially the ones marked NEW. *If you explored one of the modules some time
ago, check back to see the improvements!* At some point I intend to create
some short videos to replicate some of the enrichment pieces that were a part of
the meetings which led to these modules.

*** Module and Session Notes

**** [[file:Module-1/README.org][Module 1: Functional Programming]]
We begin an Open Lab with a Tutorial for *learning Lisp / Scheme / Racket by
writing functions which compute pictures*.  You should do this module before any
others, regardless of your current level of computing skills.

**** [[file:Module-1a/README.org][New Module 1a: 2D and 3D Functional Art]]
After a brief presentation, this will be an Open Lab for *Making Functional
Visual Art* with the =pict= and =pict3d= packages

**** [[file:Module-1b/README.org][New Module 1b: Imperative 2D Art]]
After a brief presentation, this will be an Open Lab for *Creating Visual Art
using Imperative Turtle Graphics!*

**** [[file:Module-1c/README.org][Module 1c: Animation and Game Design]]
Exploring techniques for *Animation & Interactive Graphics & Game Design!*

**** [[file:Module-2/README.org][Module 2: Software Development Power Tools]]
Exploring more powerful software development tools. *Installing and setting up a
more powerful development environment!* The material here has a longer learning
curve than much of the rest before it pays off.  *It will pay off in a big
way if you start doing larger and more complex projects!*

**** [[file:Module-3/README.org][Module 3: Using the Power Tools with Your Projects]]
Incorporating the New Tools for your Art or other projects. This is a
continuation of Module 2.

**** [[file:Module-4/README.org][NEW Module 4: Web, Systems and Network Programming]]
Learning *Systems and Network Programming* by writing a Web Server using the
Software Tools learned so far. /Uncovering the secrets behind being able to
write advanced computer programs!/

**** [[file:Module-5/README.org][NEW Module 5: SQL and Relational Design]]
Learning the power of *SQL* and the /Relational Model/ for Programming and
Persistence! This will greatly simplify any of your programs which need to work
with large amounts of data!

**** [[file:Module-6/README.org][NEW Module 6: Putting it All Together]]
Creating an ambitious Project to use Web, Graphics, Lisp and SQL. An opening for
*Creativity and Software Design*. This is very much a /build your own adventure/
module. Consider doing this module with a group or with partners.

**** [[file:Module-7/README.org][Module 7: Artificial Intelligence Programming Techniques]]
*Getting computers to understand your domain:* AI is one of the most magical
areas of computing with many diverse and powerful technologies to offer. This
module aims to give you experience with some of the most central and powerful AI
technologies and leans towards Hybrid AI, i.e. combining Explicit Knowledge and
Strategies with Heuristics.

**** [[file:Module-8/README.org][New Module 8: Maximum Ambition]]
What if your project looks inherently large and complex? And some parts seem
risky? And you seem to need a large team of developers and expert project
management?
