* Computing Magic Beta Module 1b

/Imperative Art/

Notes from a [[https://github.com/GregDavidson/computing-magic][Computing Magic]] [[mars-beta-notes.org][Beta Course]] Meeting.

** Good things to before this meeting

Complete the [[https://docs.racket-lang.org/quick/][Quick Tutorial]] through Step 8.  See [[file:meeting-1.org][Session 1]].

** 2D Imperative Art
   
Explore [[https://docs.racket-lang.org/turtles/Traditional_Turtles.html][Turtle Graphics]]
- =pseudo= is a great resource for this!
- The source code for the examples is at
      - [[https://github.com/racket/htdp/blob/master/htdp-lib/graphics/turtle-examples.rkt][turtle-examples.rkt]]

Focus on the three key turtle commands
- =(move distance)=
- =(draw distance)=
- =(turn angle)=

Create your own fancy functions to
- Draw Polygons
- Draw Mars
  - Build it up from parameterized pieces
- Draw /wild things!/

Why is this called /Imperative/?
- Each function is a /Command/, i.e. an /Imperative/ to something outside of itself
      - Specifically, a command to a /Turtle/ living in a /Canvas/
- Turtle commands change the /state/ of the Turtle and the Canvas
      - Repeating a function doesn't do the same thing!

Most graphics programming models and libraries are /Imperative/.
 
** How can this be made /Functional?/
   
The hip geeks say that Functional Programming is better, but what is it?
- [[https://www.cs.nott.ac.uk/~pszgmh//faq.html#functional-languages][Functional Programming FAQ]]

If you'd like to explore /Functional Turtles/ 
- see [[https://docs.racket-lang.org/turtles/Value_Turtles.html][Value Turtles]]
- [[https://github.com/racket/htdp/blob/master/htdp-lib/graphics/value-turtles-examples.rkt][value-turtles-examples.rkt]]
- Do Value Turtles seem weird?
      - What's going on?
