* Simple Game Protocol version 1

** Goal

Create a Client/Server Communication and Coordnation Protocol for a simple
Guessing Game

** High-Level View of Application Protocol

#+begin_src plantuml :results verbatim
Client -> Server : Connect
Client -> Server : Authenticate
Client <-> Server : Negotiate Game Parameters
mainframe "loop"
        Client -> Server : Loop: Guess
        Client <- Server : Loop: Feedback
Client -> Server : Disconnect
#+end_src

#+RESULTS:
#+begin_example
     ,------.                   ,------.
     |Client|                   |Server|
     `--+---'                   `--+---'
        |          Connect         |    
        | ------------------------->    
        |                          |    
        |       Authenticate       |    
        | ------------------------->    
        |                          |    
        | Negotiate Game Parameters|    
        | <------------------------>    
        |                          |    
        |        Loop: Guess       |    
        | ------------------------->    
        |                          |    
        |      Loop: Feedback      |    
        | <-------------------------    
        |                          |    
        |        Disconnect        |    
        | ------------------------->    
     ,--+---.                   ,--+---.
     |Client|                   |Server|
     `------'                   `------'
#+end_example

** Strategy

Create a record type or class type for each 


If we should want to send arbitrary racket values between
client and server, we should use the racket/serialize package
https://docs.racket-lang.org/reference/serialization.html

** Roadmap

- TODO Rewrite the test code
- TODO Generalize the Recv Functions
      - Adding homogeneous composite types should be easy
            - With Strings just one example
      - Adding hierarchical composite types should also be easy

** Issues, Questions, Concerns

We assume Racket is using utf encoding when sending Strings over I/O Ports
- How could we check this?
- And does it matter?
Would it be better to send Byte Vectors instead?
