* Simple Game Protocol version 0

** Goal

Create a Client/Server Communication and Coordnation Protocol for a simple
Guessing Game

** High-Level View of Application Protocol

Note: With PlantUML, Emacs and Org-Babel you can turn this description into a
nice diagram.

#+begin_src plantuml :results verbatim
Client -> Server : Connect
Client -> Server : Authenticate
Client <-> Server : Negotiate Game Parameters
mainframe "loop"
        Client -> Server : Loop: Guess
        Client <- Server : Loop: Feedback
Client -> Server : Disconnect
#+end_src

#+RESULTS:
#+begin_example
     ,------.                   ,------.
     |Client|                   |Server|
     `--+---'                   `--+---'
        |          Connect         |    
        | ------------------------->    
        |                          |    
        |       Authenticate       |    
        | ------------------------->    
        |                          |    
        | Negotiate Game Parameters|    
        | <------------------------>    
        |                          |    
        |        Loop: Guess       |    
        | ------------------------->    
        |                          |    
        |      Loop: Feedback      |    
        | <-------------------------    
        |                          |    
        |        Disconnect        |    
        | ------------------------->    
     ,--+---.                   ,--+---.
     |Client|                   |Server|
     `------'                   `------'
#+end_example

** Strategy

Create a record type or class type for each 


If we want to send arbitrary racket values between client and server,
we can use [[https://docs.racket-lang.org/reference/serialization.html][Racket Serialization]].

You might start with this initial example:

- [[file:game-protocol-0.rkt][game-protocol-0.rkt]]
- [[file:game-serve-0.rkt][game-serve-0.rkt]]
- [[file:game-client-0.rkt][game-client-0.rkt]]

** Roadmap for Improvement

- Add more error detection and reporting
- Add authentication
      - Use [[https://docs.racket-lang.org/openssl/][OpenSSL for Secure Commmunication]]
      - Modify the protocol to provide a game /Token/
            - Something to use to join an existing game
- Add guidance and Example Solutions for better games
      - Multi-Person Games
